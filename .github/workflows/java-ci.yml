name: Java CI with Build, Tests, Security, and Docker

on:
  push:
    paths:
      - 'app_Java/**'
  pull_request:
    paths:
      - 'app_Java/**'

jobs:
  build-test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3

    - name: Set up JDK
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: '11'

    - name: Cache Maven Dependencies
      uses: actions/cache@v3
      with:
        path: ~/.m2
        key: ${{ runner.os }}-maven-${{ hashFiles('app_Java/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-

    - name: Build with Maven
      run: |
        cd app_Java
        mvn clean package

    - name: Run Unit Tests
      run: |
        cd app_Java
        mvn test

  security-scan:
    needs: build-test
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3

    - name: Set up JDK
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: '11'

    - name: Install Snyk
      run: |
        npm install -g snyk

    - name: Run Snyk Security Scan
      run: snyk test --file=app_Java/pom.xml --package-manager=maven --fail-on=upgradable
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}


  docker-build-push:
    needs: build-test
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3

    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build Docker Image
      run: |
        cd app_Java
        docker build -t appjava:latest .

    - name: Tag and Push Docker Image
      run: |
        docker tag appjava:latest ${{ secrets.DOCKER_USERNAME }}/appjava:latest
        docker push ${{ secrets.DOCKER_USERNAME }}/appjava:latest
