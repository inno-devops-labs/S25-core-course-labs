name: Go CI/CD Pipeline

on:
  push:
    branches:
      - lab3
    paths:
      - "app_go/**"
  pull_request:
    branches:
      - lab3
    paths:
      - "app_go/**"

jobs:
  build-and-test:
    name: Build and Test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.22
          cache: true

      - name: Change to app_go directory
        run: cd app_go

      - name: Install Dependencies
        run: |
          cd app_go
          go mod tidy

      - name: Run Linter
        uses: golangci/golangci-lint-action@v3
        with:
          version: latest
          working-directory: app_go

      - name: Run Tests
        run: |
          cd app_go
          go test ./...

  security-check:
    name: Security Vulnerability Check
    runs-on: ubuntu-latest
    needs: build-and-test

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Install Snyk CLI
        run: npm install -g snyk

      - name: Run Snyk Security Scan
        run: |
          cd app_go
          snyk test --all-projects --detection-depth=4
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}


  docker:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    needs: security-check

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push Standard Docker Image
        run: |
          cd app_go
          docker build --cache-from ${{ secrets.DOCKER_USERNAME }}/gin-mt:latest -t ${{ secrets.DOCKER_USERNAME }}/gin-mt:latest .
          docker push ${{ secrets.DOCKER_USERNAME }}/gin-mt:latest

      - name: Build and Push Distroless Docker Image
        run: |
          cd app_go
          docker build --cache-from ${{ secrets.DOCKER_USERNAME }}/gin-mt:distroless -t ${{ secrets.DOCKER_USERNAME }}/gin-mt:distroless -f distroless.Dockerfile .
          docker push ${{ secrets.DOCKER_USERNAME }}/gin-mt:distroless