name: Python CI with Security and Docker

on:
  push:
    paths:
      - 'app_python/**'
  pull_request:
    paths:
      - 'app_python/**'

jobs:
  build-test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: Cache Dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('app_python/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install Dependencies
      run: |
        pip install --upgrade pip
        pip install -r app_python/requirements.txt

    - name: Run Linter (flake8)
      run: |
        pip install flake8
        flake8 app_python/web_app.py app_python/test_web_app.py

    - name: Run Unit Tests
      run: |
        python -m unittest discover app_python

  security-scan:
    needs: build-test
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: Install Dependencies
      run: |
        pip install -r app_python/requirements.txt

    - name: Run Snyk Security Scan
      uses: snyk/actions/python@master
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      with:
        args: --file=app_python/requirements.txt --package-manager=pip --skip-unresolved

  docker-build-push:
    needs: build-test
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3

    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build Docker Image
      run: |
        cd app_python
        docker build -t myapp:latest .

    - name: Tag and Push Docker Image
      run: |
        docker tag myapp:latest ${{ secrets.DOCKER_USERNAME }}/myapp:latest
        docker push ${{ secrets.DOCKER_USERNAME }}/myapp:latest
