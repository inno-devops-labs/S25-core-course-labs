name: Python App CI Pipeline

on:
  push:
    paths:
      - 'app_python/**'
      - '.github/workflows/app_python.yml'
  pull_request:
    paths:
      - 'app_python/**'
      - '.github/workflows/app_python.yml'

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
          cache: 'pip'

      - name: Install Dependencies
        run: |
          cd app_python
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run Linter (flake8)
        run: |
          pip install flake8
          flake8 app_python --count --select=E9,F63,F7,F82 --show-source --statistics

      - name: Run Tests (pytest)
        run: |
          pip install pytest
          cd app_python
          pytest --junitxml=reports/test-results.xml

      - name: Upload Test Results
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: app_python/reports/test-results.xml

  security-scan:
    needs: build-and-test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Snyk Run Code Test
        runs: 
          using: "docker"
            image: "docker://snyk/snyk:python-3.9"
            env:
              FORCE_COLOR: 2
              SNYK_INTEGRATION_NAME: GITHUB_ACTIONS
              SNYK_INTEGRATION_VERSION: python-3.9
              SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
            args:
              - snyk
              - test


  docker:
    needs: [build-and-test, security-scan]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push Distroless Docker Image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/app_python:distroless -f app_python/distroless.Dockerfile app_python
          docker push ${{ secrets.DOCKER_USERNAME }}/app_python:distroless
