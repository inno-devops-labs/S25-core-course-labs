name: CI Pipeline Python App

on:
  pull_request:
    paths:
    - 'app_python/**'
    - '.github/workflows/app_python.yml'

jobs:
  python:
    defaults:
      run:
        working-directory: app_python
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Cache Dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run linter
        run: |
          pip install flake8
          flake8 .

      - name: Run tests
        run: |
          python -m unittest discover -s . -p 'test_*.py'

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push to Docker Hub
        uses: docker/build-push-action@v5
        with:
          push: true
          tags: "${{ secrets.DOCKER_USERNAME }}/flask-app:latest"
          context: "{{defaultContext}}:app_python"
          cache-from: type=registry,ref=${{ secrets.DOCKER_USERNAME }}/flask-app:latest
          cache-to: type=inline
      - name: Print branch name
        run: |
          echo "Source branch: ${{ github.head_ref }}"

      - name: Run Snyk to check for vulnerabilities
        uses: snyk/actions/python-3.9@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          command: monitor
          args: --file=app_python/requirements.txt --skip-unresolved --target-reference="${{ github.head_ref }}"