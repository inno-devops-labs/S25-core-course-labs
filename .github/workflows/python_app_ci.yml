name: Python CI workflow

on:
  pull_request:
    paths:
    - 'app_python/**'
    - '.github/workflows/app_python.yml'

jobs:
  build-test-lint:
    defaults:
      run:
        working-directory: app_python
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python 3.9
      uses: actions/setup-python@v5
      with:
        python-version: '3.9'
        cache: 'pip'
        cache-dependency-path: |
          requirements.txt
          requirements-dev.txt

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt -r requirements-dev.txt

    - name: Run Linter
      run: flake8 app.py test_app.py --max-line-length=88 --exclude venv

    - name: Run Tests
      run: pytest test_app.py -v --cov=app --cov-report=xml

  security-check:
    runs-on: ubuntu-22.04
    needs: [build-test-lint]
    steps:
      - uses: actions/checkout@v4
      - name: Snyk Security Scan
        uses: snyk/actions/python-3.10@master
        with:
          args: --skip-unresolved app_python/
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

  docker-build-push:
    name: Build & Push Docker Image
    runs-on: ubuntu-latest
    needs: [build-test-lint, security-check]
    defaults:
      run:
        working-directory: app_python

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Log in to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build & Push Multi-Arch Docker Image
        uses: docker/build-push-action@v5
        with:
          context: "{{defaultContext}}:app_python"
          push: true
          tags: "${{ secrets.DOCKER_USERNAME }}/moscow-time-py-app:latest"
          platforms: linux/amd64,linux/arm64,linux/arm/v7
          cache-from: type=registry,ref=${{ secrets.DOCKER_USERNAME }}/moscow-time-py-app:latest
          cache-to: type=inline