name: Python CI with Docker

on:
  push:
    paths:
      - 'app_python/**'
      - '.github/workflows/py.yml'
  pull_request:
    paths:
      - 'app_python/**'
      - '.github/workflows/py.yml'

jobs:
  install:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r app_python/requirements.txt

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

  lint:
    runs-on: ubuntu-latest
    needs: install

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Run linter (flake8)
        run: |
          pip install flake8
          flake8 --max-line-length=88 --ignore=E203,W503 app_python/app.py app_python/tests/

  test:
    runs-on: ubuntu-latest
    needs: install

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r app_python/requirements.txt

      - name: Run unit tests
        run: |
          python -m unittest app_python/tests/test.py

  snyk:
    runs-on: ubuntu-latest
    needs: install
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Snyk is applied
        uses: snyk/actions/python-3.10@master
        with:
          args: --skip-unresolved app_python/
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

  docker:
    needs: [install, lint, test, snyk]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Cache Docker
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-docker-${{ hashFiles('**/Dockerfile') }}
          restore-keys: |
            ${{ runner.os }}-docker-

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./app_python
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/python-msk-time:latest
