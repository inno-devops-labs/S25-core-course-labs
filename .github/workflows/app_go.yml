name: CI Pipeline for Go Web Appplication

on:
  pull_request:
    branches:
      - master
    paths:
      - ".github/workflows/app_go.yml"
      - "app_go/**"

jobs:
  build-and-test:
    runs-on: ubuntu-20.04

    defaults:
      run:
        working-directory: ./app_go

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.23"

      - name: Cache Go Modules
        uses: actions/cache@v4
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('app_go/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Install Dependencies
        run: |
          go mod download

      - name: Run Linter
        run: |
          go install github.com/golangci/golangci-lint/cmd/golangci-lint@latest
          go install mvdan.cc/gofumpt@latest
          make check

      - name: Run Tests
        run: |
          make test
      
      - name: Snyk Security Scan
        uses: snyk/actions/golang@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --skip-unresolved ./app_go

      - name: Code Coverage Results
        uses: actions/upload-artifact@v4
        with:
          name: go-code-coverage-report
          path: ./app_go/coverage.out

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}
      
      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v6
        with:
          context: ./app_go
          file: ./app_go/distroless.Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/simple-go-web-app-distroless:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
