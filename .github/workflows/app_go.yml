name: Go app workflow

on:
  pull_request:
    paths:
    - 'app_go/**'
    - '.github/workflows/app_go.yml'

jobs:
  lint:
    name: Run golang-ci lint
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: 1.23
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v6
        with:
          working-directory: app_go
          args: --config=.golangci.yml
          version: v1.60

  test:
    name: Run go test 
    defaults:
      run:
        working-directory: app_go
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: 1.23.5
      - name: run testing
        run: go test -race ./...

  security-check:
    runs-on: ubuntu-22.04
    needs: [lint, test]
    steps:
      - uses: actions/checkout@master
      - name: Run Snyk to check for vulnerabilities
        uses: snyk/actions/golang@master
        with:
          args: --skip-unresolved app_go/
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

  docker-push:
    defaults:
      run:
        working-directory: app_go 
    needs: [lint, test, security-check]
    runs-on: ubuntu-22.04
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Build and push to the Docker Hub
        uses: docker/build-push-action@v5
        with:
          push: true
          tags: "${{ secrets.DOCKER_USERNAME }}/goapp:latest"
          context: "{{defaultContext}}:app_go"
          cache-from: type=registry,ref=${{ secrets.DOCKER_USERNAME }}/goapp:latest
          cache-to: type=inline
