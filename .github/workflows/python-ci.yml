name: Django CI/CD Pipeline

on:
  push:
    branches:
      - lab3
    paths:
      - "app_python/**"
  pull_request:
    branches:
      - lab3
    paths:
      - "app_python/**"

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Cache Dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r app_python/requirements.txt

      - name: Run linter (flake8)
        run: |
          pip install flake8
          flake8 --max-line-length=100

      - name: Run unit tests
        run: |
          python app_python/time_app/manage.py test
          
  snyk-security:
    runs-on: ubuntu-latest
    needs: build-and-test

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r app_python/requirements.txt

      - name: Run Snyk Security Scan
        uses: snyk/actions/python@master
        with:
          args: --skip-unresolved app_python/
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

  docker:
    defaults:
        run:
          working-directory: app_python
    needs: build-and-test
    runs-on: ubuntu-latest
    if: github.event_name == 'push'

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v4
        with:
          context: app_python
          file: app_python/Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/moscow-time-app:latest

