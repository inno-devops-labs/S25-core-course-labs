# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python package

on:
  push:
    branches: [ "master", "lab3" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9"]

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Cache pip
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    - name: Install dependencies
      run: |
        cd app_python
        python -m pip install --upgrade pip
        python -m pip install flake8 black bandit
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint with flake8
      run: |
        cd app_python
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Run black formatter
      run: |
        cd app_python
        black . --check --diff
    - name: Run tests with unittest
      run: |
        cd app_python
        python -m unittest discover -s tests
    - name: Run bandit
      run: |
        cd app_python
        bandit -r .

  security-check:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - uses: actions/checkout@v4
    - name: Run Snyk to check for vulnerabilities
      uses: snyk/actions/python-3.10@master
      with:
        args: --skip-unresolved app_python/
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

  docker:
    needs: [ build, security-check ]
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: app_python
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/app-python:latest

      - name: Build and push Distroless Docker image
        uses: docker/build-push-action@v2
        with:
          context: app_python
          file: app_python/distroless.Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/app-python:distroless
