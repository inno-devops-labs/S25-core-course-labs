name: Golang CI/CD Pipeline

on:
  push:
    branches:
      - lab3
    paths:
      - 'app_golang/**'
      - '.github/workflows/app_golang_ci.yml'
  pull_request:
    branches:
      - lab3
    paths:
      - 'app_golang/**'
      - '.github/workflows/app_golang_ci.yml'

jobs:
  build-lint-test:
    name: Build, Lint, and Test
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: app_golang

    steps:
    - name: 📥 Checkout Repository
      uses: actions/checkout@v3

    - name: 🔧 Set Up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.23'
        cache: true

    - name: 📦 Install Dependencies
      run: go mod tidy

    - name: 🔍 Run Linter (golangci-lint)
      run: |
        go install github.com/golangci/golangci-lint/cmd/golangci-lint@latest
        golangci-lint run ./...

    - name: 🧪 Run Unit Tests
      run: go test -v ./...

  security-scan:
    name: Security Check
    needs: build-lint-test
    runs-on: ubuntu-latest

    steps:
    - name: 📥 Checkout Repository
      uses: actions/checkout@v3

    - name: 🔍 Run Snyk to check for vulnerabilities
      uses: snyk/actions/golang@master
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      with:
        args: --file=app_golang/go.mod --severity-threshold=high

  docker:
    needs: [build-lint-test, security-scan]
    runs-on: ubuntu-latest

    steps:
    - name: 📥 Checkout Repository
      uses: actions/checkout@v3

    - name: 🔑 Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: 📦 Build and Push Docker Image
      run: |
        docker build --cache-from=azazaki/app_golang:latest -t azazaki/app_golang:latest ./app_golang
        docker push azazaki/app_golang:latest
