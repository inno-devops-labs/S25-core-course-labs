name: Node.js Application CI

on:
  push:
    paths:
      - "app_nodejs/**"
  pull_request:
    paths:
      - "app_nodejs/**"

permissions:
  contents: read
  security-events: write
  actions: read

jobs:
  analyze:
    name: Analyze Code
    runs-on: ubuntu-latest
    permissions:
      security-events: write
      actions: read
      contents: read

    strategy:
      fail-fast: false
      matrix:
        language: [ 'javascript' ]

    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"
          cache-dependency-path: "app_nodejs/package.json"

      - name: Install dependencies
        run: |
          cd app_nodejs
          npm i

      - name: Run ESLint
        run: |
          cd app_nodejs
          npm run lint

      - name: Run tests
        run: |
          cd app_nodejs
          npm test

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: ${{ matrix.language }}

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3
        with:
          category: "/language:${{ matrix.language }}"

      - name: Run Snyk to check for vulnerabilities
        uses: snyk/actions/node@master
        continue-on-error: true
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          command: test
          args: --file=app_nodejs/package.json --sarif-file-output=snyk.sarif --severity-threshold=high

      - name: Upload Snyk result to GitHub Code Scanning
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: snyk.sarif

  build:
    runs-on: ubuntu-latest
    needs: analyze

    steps:
      - uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push standard Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./app_nodejs
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/nodejs-app:latest
          cache-from: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/nodejs-app:buildcache
          cache-to: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/nodejs-app:buildcache,mode=max

      - name: Build and push distroless Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./app_nodejs
          file: ./app_nodejs/distroless.Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/nodejs-app:distroless
          cache-from: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/nodejs-app:distroless-buildcache
          cache-to: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/nodejs-app:distroless-buildcache,mode=max
