name: Python CI/CD Pipeline

on:
  push:
    branches:
      - lab3
    paths:
      - 'app_python/**'
      - '.github/workflows/app_python_ci.yml'
  pull_request:
    branches:
      - lab3
    paths:
      - 'app_python/**'
      - '.github/workflows/app_python_ci.yml'

jobs:
  build-lint-test:
    defaults:
      run:
        working-directory: app_python

    name: Build, lint, and test
    runs-on: ubuntu-latest

    steps:
    - name: 📥 Checkout Repository
      uses: actions/checkout@v3

    - name: 🔧 Set Up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        cache: 'pip'

    - name: 📦 Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: 🔍 Run Linter (flake8)
      run: |
        pip install flake8
        flake8 app.py test_app.py --max-line-length=120

    - name: 🧪 Run Unit Tests
      run: |
        pytest test_app.py

  security-scan:
    name: Security check
    needs: build-lint-test
    runs-on: ubuntu-latest

    steps:
    - name: 📥 Checkout Repository
      uses: actions/checkout@v3

    - name: 🔍 Run Snyk to check for vulnerabilities
      uses: snyk/actions/python@master
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      with:
        args: --skip-unresolved --severity-threshold=high app_python/

  docker:
    needs: [build-lint-test, security-scan]
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: app_python

    steps:
    - name: 📥 Checkout Repository
      uses: actions/checkout@v3

    - name: 🔑 Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: 📦 Build and Push Docker Image
      run: |
        docker build --cache-from=azazaki/app_python:latest -t azazaki/app_python:latest .
        docker push azazaki/app_python:latest
