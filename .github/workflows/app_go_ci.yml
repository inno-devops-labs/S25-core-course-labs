name: Go App CI

on:
  push:
    paths:
      - "app_go/**"
      - '.github/workflows/app_go_ci.yml'
  pull_request:
    paths:
      - "app_go/**"
      - '.github/workflows/app_go_ci.yml'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.21"

      - name: Cache Go Modules
        uses: actions/cache@v4
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('app_go/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Install Dependencies
        run: |
          cd app_go
          go mod tidy

      - name: Run Linter
        run: |
          cd app_go
          go install golang.org/x/lint/golint@latest
          golint ./...

      - name: Run Tests
        run: |
          cd app_go
          go test ./...

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker Image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/go-app:latest ./app_go

      - name: Push Docker Image
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/go-app:latest

      - name: Run Snyk to check for vulnerabilities
        uses: snyk/actions/golang@master
        continue-on-error: true
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --sarif-file-output=snyk.sarif app_go
      - name: Upload result to GitHub Code Scanning
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: snyk.sarif
