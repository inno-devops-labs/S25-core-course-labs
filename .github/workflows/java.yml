name: Java CI

on:
  push:
    paths:
      - 'app_java/**'
    branches: [master]
  pull_request:
    branches: [master]

env:
  DOCKER_IMAGE_NAME: random-quote-app-java
  DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}

jobs:
  build-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        java-version: [17, 21]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: ${{ matrix.java-version }}
          distribution: temurin

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ matrix.java-version }}-${{ hashFiles('app_java/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-${{ matrix.java-version }}-

      - name: Build and test
        working-directory: ./app_java
        run: |
          chmod +x mvnw
          ./mvnw verify

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: Install Snyk CLI
        run: npm install -g snyk

      - name: Snyk Security Scan
        working-directory: ./app_java
        run: snyk monitor --file=pom.xml
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
          JAVA_HOME: ${{ env.JAVA_HOME }}

  docker-build-push:
    needs: build-test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v5
        with:
          context: ./app_java
          push: true
          tags: ${{ env.DOCKERHUB_USERNAME }}/${{ env.DOCKER_IMAGE_NAME }}:latest

      - name: Snyk Container Scan
        uses: snyk/actions/docker@master
        with:
          image: ${{ env.DOCKERHUB_USERNAME }}/${{ env.DOCKER_IMAGE_NAME }}:latest
          args: --file=app_java/Dockerfile
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}