name: Flask Web Application (Moscow Time)

on:
  push:
    branches: [ "lab3", "master" ]
    paths: [ "app_python" ]
  pull_request:
    branches: [ "master" ]
    paths: [ "app_python" ]


permissions:
  contents: read

jobs:
  security:
    name: Check for vulnerabilities
    timeout-minutes: 10
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
        with:
          ref: "lab3"

      - name: Run Snyk to check for vulnerabilities
        uses: snyk/actions/python-3.9@master
        with:
          command: code test  
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

  build:
    needs: [security]
    name: Build & Test
    timeout-minutes: 10
    runs-on: ubuntu-22.04

    steps:
      - uses: actions/checkout@v4
        with:
          ref: "lab3"
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'
          architecture: 'x64'
          cache: 'pip'

      - name: Install dependencies
        working-directory: app_python
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Lint code
        working-directory: app_python
        run: |
          flake8 tests app.py
          pylint tests app.py

      - name: Test with pytest
        working-directory: app_python
        run: pytest tests

  docker:
    needs: [security, build] 
    name: Build & Push Docker images
    timeout-minutes: 10
    runs-on: ubuntu-22.04
    steps:
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push normal image
        uses: docker/build-push-action@v6
        with:
          push: true
          context: "{{defaultContext}}:app_python"  
          tags: ${{ vars.DOCKERHUB_USERNAME }}/app_python:app_python-prod-ci-1.0.0
          cache-from: type=gha,scope=container
          cache-to: type=gha,mode=max,scope=container

      - name: Build and push distroless image
        uses: docker/build-push-action@v6
        with:
          push: true
          context: "{{defaultContext}}:app_python" 
          tags: ${{ vars.DOCKERHUB_USERNAME }}/app_python:app_python-distroless-prod-ci-1.0.0
          cache-from: type=gha,scope=container
          cache-to: type=gha,mode=max,scope=container