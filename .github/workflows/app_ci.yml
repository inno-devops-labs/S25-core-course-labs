name: CI/CD Pipeline

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
    paths:
      - ".github/workflows/app_python.yml"
      - "app_python/**"

jobs:
  build-and-test:
    runs-on: ubuntu-22.04

    defaults:
      run:
        working-directory: ./app_python

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"
          cache: 'pip'

      - name: Cache Python Dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('app_python/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Lint Code (flake8)
        run: |
          pip install flake8
          flake8 app.py test_app.py --max-line-length=120

      - name: Run Tests
        run: |
          python -m unittest test_app.py

  security-scan:
    name: Security check
    needs: build-and-test
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3

    - name: Run Snyk
      uses: snyk/actions/python@master
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      with:
        args: --skip-unresolved --severity-threshold=high app_python/

  docker:
    needs: [build-and-test, security-scan]
    runs-on: ubuntu-22.04
    defaults:
      run:
        working-directory: app_python

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Set Up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Cache Docker Layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-docker-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-docker-

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v5
        with:
          context: app_python
          file: app_python/Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/moscow-time-app:latest