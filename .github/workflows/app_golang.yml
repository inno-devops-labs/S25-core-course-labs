name: Golang app CI

on:
  push:
    paths:
      - ".github/workflows/app_golang.yml"
      - "app_golang/**"

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  ci:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-24.04]
    defaults:
      run:
        working-directory: ./app_golang
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Go 1.23.4
        uses: actions/setup-go@v4
        with:
          go-version: "1.23.4"
          cache-dependency-path: go.sum

      - name: Dependencies
        run: go mod download

      - name: Format (gofmt)
        uses: Jerome1337/gofmt-action@v1.0.5
        with:
          gofmt-path: "src"
          gofmt-flags: "-l -d"

      - name: Linter
        uses: dominikh/staticcheck-action@v1
        with:
          version: "latest"
          install-go: false
          cache-key: "1.23.4"
          working-directory: app_golang/src

      - name: Build
        run: go build -v src/main.go

      - name: Setup tests
        run: go test -c ./src

      - name: Tests
        run: ./src.test

  snyk:
    runs-on: ubuntu-24.04
    environment: ci
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Run Snyk
        uses: snyk/actions/golang@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: app_golang/ --skip-unresolved

  docker:
    needs: ci
    environment: ci
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ vars.DH_USERNAME }}/${{ vars.DH_IMAGE_NAME_GO }}
          tags: |
            latest
            type=semver,pattern={{major}}.{{minor}}

      - name: Login
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DH_USERNAME }}
          password: ${{ secrets.DH_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build & Push
        uses: docker/build-push-action@v6
        with:
          push: true
          context: app_golang
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=registry,ref=${{ vars.DH_USERNAME }}/${{ vars.DH_IMAGE_NAME_GO }}:latest
          cache-to: type=inline
