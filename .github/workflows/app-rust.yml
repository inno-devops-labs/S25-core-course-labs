name: app-rust

on:
  push:
    paths:
      - app_rust/**
  workflow_dispatch:

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        step: ["lint", "test"]
    steps:
      - uses: actions/checkout@v4

      - name: Rust Setup
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          override: true
          toolchain: stable

      - name: Cache Rust dependencies
        uses: Swatinem/rust-cache@v2
        with:
          workspaces: app_rust

      - name: Dependencies
        working-directory: ./app_rust
        run: |
          rustup update stable
          cargo install --locked cargo-nextest

      - name: Linting
        if: matrix.step == 'lint'
        working-directory: ./app_rust
        run: |
          cargo fmt -- --check
          cargo clippy -- -D warnings

      - name: Testing
        if: matrix.step == 'test'
        working-directory: ./app_rust
        run: cargo nextest run

      - name: Docker Login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Cache Docker layers
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and Push Docker image
        uses: docker/build-push-action@v6
        with:
          context: app_rust
          file: app_rust/Dockerfile
          push: true
          tags: 2imt/app_rust:latest
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache,mode=max

  security:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Rust Setup
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          override: true
          toolchain: stable

      - name: Install Dependencies
        working-directory: ./app_rust
        run: |
          rustup update stable
          cargo install --locked cargo-audit

      - name: Run cargo-audit for Vulnerability Checks
        working-directory: ./app_rust
        run: cargo audit
