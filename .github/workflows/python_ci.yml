name: Python CI

on:
    push:
      paths:
        - 'app_python/**'
    pull_request:
      paths:
        - 'app_python/**'

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      # Step 1) Checkout the code
      - name: Check out code
        uses: actions/checkout@v3

      # Step 2) Set up Python
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      # Step 3) Optimize Workflow
      - name: Cache pip
        uses: actions/cache@v3
        with:
         path: ~/.cache/pip
         key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
         restore-keys: |
            ${{ runner.os }}-pip-
    
      # Step 4) Install dependencies
      - name: Install Dependencies
        run: |
          cd app_python
          pip install --upgrade pip
          pip install -r requirements.txt

      # Step 5) Linter (example using flake8)
      - name: Lint with flake8
        run: |
          pip install flake8
          flake8 app_python/main.py app_python/tests/test_main.py

      - name: Run Snyk to check for vulnerabilities
        uses: snyk/actions/python@master
        continue-on-error: true
        with:
            command: test ../../app_python
        env:
            SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      
      # Step 8) Run tests
      - name: Run Tests
        run: |
          cd app_python
          pytest

  # Docker-related steps in the same job or separate job
  docker:
    runs-on: ubuntu-latest
    needs: build-and-test  # So it only runs if the previous job succeeds

    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Docker login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker image
        run: |
          cd app_python
          docker build -t ${{ secrets.DOCKER_USERNAME }}/python-webapp:ci-latest .

      - name: Push Docker image
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/python-webapp:ci-latest
