name: Python app workflow

on:
  push:
    paths:
      - 'app_python/**'
      - '.github/workflows/app_python.yaml'

  pull_request:
    paths:
      - 'app_python/**'
      - '.github/workflows/app_python.yaml'

defaults:
  run:
    working-directory: app_python

jobs:

  lint:
    name: Run formatting check with Pylint

    runs-on: ubuntu-22.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Install dependencies
        run: pip install -r dev-requirements.txt

      - name: Run Pylint
        run: pylint main.py

      - name: Set up Black formatter
        uses: psf/black@stable
        with:
          options: "--check --diff"
          src: "./app_python"

  test:
    name: Run tests with Pytest
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.11
          cache: 'pip'

      - name: Install dependencies
        run: pip install -r dev-requirements.txt

      - name: Test with Pytest
        run: pytest test.py


  snyk:
    name: Run Skyk security checks
    runs-on: ubuntu-22.04
    needs: [ lint, test ]

    steps:
      - uses: actions/checkout@v4
      - name: Run Snyk to check for vulnerabilities
        uses: snyk/actions/python-3.10@master
        with:
          args: --skip-unresolved app_python/
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

  docker-basic-push:
    name: Build basic Docker image and push it to DockerHub
    needs: [ lint, test, snyk ]
    runs-on: ubuntu-22.04

    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push basic image
        uses: docker/build-push-action@v6
        with:
          push: true
          context: "{{defaultContext}}:app_python"
          file: Dockerfile
          tags: "${{ secrets.DOCKERHUB_USERNAME }}/inno_devops_lab2_python_basic:latest"
          cache-from: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/inno_devops_lab2_python_basic:latest
          cache-to: type=inline


  docker-bonus-push:
    name: Build distroless Docker image and push it to DockerHub
    needs: [ lint, test, snyk ]
    runs-on: ubuntu-22.04

    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push distroless image
        uses: docker/build-push-action@v6
        with:
          push: true
          context: "{{defaultContext}}:app_python"
          file: distroless.Dockerfile
          tags: "${{ secrets.DOCKERHUB_USERNAME }}/inno_devops_lab2_python_bonus:latest"
          cache-from: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/inno_devops_lab2_python_bonus:latest
          cache-to: type=inline