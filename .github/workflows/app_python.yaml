name: app_python

on:
  push:
    paths:
      # Check sources and actions dirs
      - 'app_python/**'
      - '.github/workflows/app_python.yaml'
      # Ignore markdown update
      - '!**/*.md'
  pull_request:
    paths:
      # Check sources and actions dirs
      - 'app_python/**'
      - '.github/workflows/app_python.yaml'
      # Ignore markdown update
      - '!**/*.md'

jobs:

  lint:
    timeout-minutes: 2
    name: Run Black Linter
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
          cache: "pip"

      - name: Install Black
        run: pip install black

      - name: Run Black
        run: black --check app_python

  test:
    timeout-minutes: 5
    defaults:
      run:
        working-directory: app_python
    name: Run Pytest
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
          cache: "pip"

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run Tests with Pytest
        run: pytest tests/tests.py

  snyk_check:
    needs: [lint, test]
    timeout-minutes: 5
    name: Run Snyk Security Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
          cache: "pip"

      - name: Install Dependencies
        working-directory: app_python
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Install Snyk CLI
        run: |
          npm install -g snyk

      - name: Run Snyk to check for vulnerabilities
        continue-on-error: true
        working-directory: app_python
        run: snyk test --sarif-file-output=snyk.sarif
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

      - name: Upload result to GitHub Code Scanning
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: app_python/snyk.sarif

  build_push:
    timeout-minutes: 10
    defaults:
      run:
        working-directory: app_python
    needs: [lint, test, snyk_check]
    name: Build and Push Docker Image
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Build and Push to DockerHub
        uses: docker/build-push-action@v5
        with:
          push: true
          tags: "${{ secrets.DOCKER_USERNAME }}/app_python:v0.1"
          context: app_python/
          cache-from: type=registry,ref=${{ secrets.DOCKER_USERNAME }}/app_python:v0.1
          cache-to: type=local,dest=/tmp/.buildx-cache

      - name: Distroless Build and Push to DockerHub
        uses: docker/build-push-action@v5
        with:
          push: true
          tags: "${{ secrets.DOCKER_USERNAME }}/app_python_distroless:v0.1"
          context: app_python/
          cache-from: type=registry,ref=${{ secrets.DOCKER_USERNAME }}/app_python_distroless:v0.1
          cache-to: type=local,dest=/tmp/.buildx-cache
