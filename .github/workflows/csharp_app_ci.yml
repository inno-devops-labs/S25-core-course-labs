name: C# CI Workflow

on:
  pull_request:
    paths:
      - 'app_csharp/**'
      - '.github/workflows/csharp_app_ci.yml'

jobs:
  build-test-lint:
    name: Build, Lint, and Test
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: app_csharp/MoscowTimeApp

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup .NET 8
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '8.0.x'

    - name: Restore dependencies
      run: dotnet restore

    - name: Build application
      run: dotnet build --configuration Release --no-restore

    - name: Run Linter
      run: dotnet format --verify-no-changes --workspace app_csharp/MoscowTimeApp/MoscowTimeApp.sln

    - name: Run Unit Tests
      run: dotnet test --configuration Release --no-restore --verbosity normal

  security-check:
    runs-on: ubuntu-latest
    needs: [build-test-lint]
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Run Security Scan
      uses: github/codeql-action/analyze@v2
      with:
        category: 'security'

  docker-build-push:
    name: Build & Push Docker Image
    runs-on: ubuntu-latest
    needs: [build-test-lint, security-check]
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: app_csharp
        file: app_csharp/Dockerfile
        push: true
        tags: ${{ secrets.DOCKER_USERNAME }}/moscow-time-cs-app:latest
    
    - name: Build and push Distroless Docker image
      uses: docker/build-push-action@v5
      with:
        context: app_csharp
        file: app_csharp/distroless.Dockerfile
        push: true
        tags: ${{ secrets.DOCKER_USERNAME }}/moscow-time-cs-app:distroless
