name: app-python

on:
  push:
    paths:
      - app_python/**
  workflow_dispatch:

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        step: ["lint", "test"]
    steps:
      - uses: actions/checkout@v4

      - name: Python 3.11 Setup
        uses: actions/setup-python@v3
        with:
          python-version: "3.11"

      - name: Dependencies
        working-directory: ./app_python
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest
          pip install -r requirements.txt

      - name: Linting
        if: matrix.step == 'lint'
        working-directory: ./app_python
        run: |
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

      - name: Testing
        if: matrix.step == 'test'
        working-directory: ./app_python
        run: |
          pytest .

      - name: Docker Login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker Image
        working-directory: ./app_python
        run: |
          docker build --build-arg CACHEBUST=$(date +%s) -t app_python .

      - name: Push Docker Image
        working-directory: ./app_python
        run: |
          docker tag app_python:latest ${{ secrets.DOCKER_USERNAME }}/app_python:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/app_python:latest

  security:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js and npm
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Install Snyk CLI
        run: npm install -g snyk

      - name: Install Python dependencies
        working-directory: ./app_python
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run Snyk to check for vulnerabilities
        run: snyk test --file=requirements.txt
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        working-directory: ./app_python
