---
- name: Set facts of the OS packages
  package_facts:
    manager: apt
  become: true

- name: Is Docker installed?
  set_fact:
    docker_installed: "{{ 'docker-ce' in ansible_facts.packages }}"

- name: Is Docker Compose installed?
  set_fact:
    docker_compose_installed: "{{ 'docker-compose-plugin' in ansible_facts.packages }}"

- name: Install necessary packages
  apt:
    name:
      - apt-transport-https
      - ca-certificates
      - curl
      - gnupg-agent
      - software-properties-common
    state: present
    update_cache: yes
  when: not docker_installed
  become: true

- name: Add Docker's official GPG key
  apt_key:
    url: https://download.docker.com/linux/ubuntu/gpg
    state: present
  when: not docker_installed
  become: true

- name: Check if Docker apt repository is already added
  stat:
    path: /etc/apt/sources.list.d/docker.list
  register: docker_repo_present
  become: true

- name: Add Docker apt repository
  apt_repository:
    repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable
    state: present
    filename: docker
  when: not docker_installed and not docker_repo_present.stat.exists
  become: true

- name: Update apt package
  apt:
    update_cache: yes
  when: not docker_installed
  become: true

- name: Install Docker Engine
  apt:
    name:
      - "docker-ce={{ docker_version }}"
      - "docker-ce-cli={{ docker_version }}"
      - containerd.io
    state: latest
  when: not docker_installed
  become: true


- name: Install Docker Compose plugin
  apt:
    name:
      - "docker-compose-plugin={{ docker_compose_version }}"
    state: latest
  when: not docker_compose_installed
  become: true

- name: Enable & Start Docker service
  systemd:
    name: docker
    enabled: true
    state: started
  become: true

- name: Create docker group
  group:
    name: docker
    state: present
  become: true

- name: Add current ansible user to docker group
  user:
    name: "{{ ansible_user_id }}"
    groups: docker
    append: yes
  become: true

- name: Secure Docker configuration by enabling user namespace remapping
  copy:
    dest: /etc/docker/daemon.json
    content: |
      {
          "userns-remap": "default"
      }
    owner: root
    group: root
    mode: '0644'
  become: true

- name: Restart Docker service if configuration changed
  service:
    name: docker
    state: restarted
  when: docker_installed
  become: true
