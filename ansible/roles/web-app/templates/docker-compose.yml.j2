version: '3.8'

services:
  db:
    image: "{{ db_image }}"
    environment:
      POSTGRES_DB: "{{ db_name }}"
      POSTGRES_USER: "{{ db_user }}"
      POSTGRES_PASSWORD: "{{ db_password }}"
    volumes:
      - "{{ db_init_script }}:/docker-entrypoint-initdb.d/init.sql"
    ports:
      - "{{ db_port }}:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U {{ db_user }} -d {{ db_name }}"]
      interval: 30s
      timeout: 10s
      retries: 5

  backend:
    image: "{{ backend_image }}"
    environment:
      DATABASE_URI: "postgres://{{ db_user }}:{{ db_password }}@db:5432/{{ db_name }}"
    ports:
      - "{{ backend_port }}:8080"
    depends_on:
      db:
        condition: service_healthy
        restart: true
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8080/times || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5

  frontend:
    image: "{{ frontend_image }}"
    ports:
      - "{{ frontend_port }}:3000"
    depends_on:
      backend:
        condition: service_healthy
        restart: true
    healthcheck:
      test: [ "CMD-SHELL", "curl -f http://localhost:3000 || exit 1" ]
      interval: 30s
      timeout: 10s
      retries: 5
