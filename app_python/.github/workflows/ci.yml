name: Python CI

on:
  push:
    paths:
      - "app_python/**"
  pull_request:
    paths:
      - "app_python/**"

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Cache Dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('app_python/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          pip install -r app_python/requirements.txt

      - name: Run Snyk Security Scan
        uses: snyk/actions/python@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --file=app_python/requirements.txt

      - name: Run Linter (Flake8)
        run: |
          pip install flake8
          flake8 app_python/

      - name: Run Tests (Pytest)
        run: |
          pip install pytest pytest-cov
          pytest --cov=app_python --cov-report=xml

  docker:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push Docker Image
        run: |
          docker build --cache-from ramilevna/app_python:latest --pull -t ramilevna/app_python:latest app_python/
          docker push ramilevna/app_python:latest