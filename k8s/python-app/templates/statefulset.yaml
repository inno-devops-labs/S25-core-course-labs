apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "python-app.fullname" . }}
  labels:
    {{- include "library-chart.labels" . | indent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "library-chart.labels" . | indent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "python-app.labels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: internal-app
      # serviceAccountName: {{ include "python-app.serviceAccountName" . }}
      {{- with .Values.podSecurityContext }}
      securityContext:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          {{- with .Values.securityContext }}
          securityContext:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          {{- with .Values.livenessProbe }}
          livenessProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.readinessProbe }}
          readinessProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          resources:
            requests:
              cpu: "{{ .Values.env.cpuRequest }}"
              memory: "{{ .Values.env.memoryRequest }}"
            limits:
              cpu: "{{ .Values.env.cpuLimit }}"
              memory: "{{ .Values.env.memoryLimit }}"
          volumeMounts:
            - name: config-volume
              mountPath: /app/config
            - name: visits
              mountPath: /app/visits
          env:
            - name: CPU_REQUEST
              value: "{{ .Values.env.cpuRequest }}"
            - name: CPU_LIMIT
              value: "{{ .Values.env.cpuLimit }}"
            - name: MEMORY_REQUEST
              value: "{{ .Values.env.memoryRequest }}"
            - name: MEMORY_LIMIT
              value: "{{ .Values.env.memoryLimit }}"
            - name: SECRET
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-secrets
                  key: SECRET
      volumes:
        - name: config-volume
          configMap:
            name: {{ .Release.Name }}-config
        - name: visits
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
  volumeClaimTemplates:
  - metadata:
      name: visits
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 1Mi
