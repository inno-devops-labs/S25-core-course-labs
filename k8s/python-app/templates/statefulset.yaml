apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "app-chart.fullname" . }}
  labels:
    {{- include "app-chart.labels" . | nindent 4 }}
spec:
  serviceName: {{ include "app-chart.fullname" . }}
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "app-chart.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "app-chart.selectorLabels" . | nindent 8 }}
    spec:
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 3
            failureThreshold: 3
          volumeMounts:
            - name: data
              mountPath: /app/data
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
  podManagementPolicy: {{ .Values.podManagementPolicy | default "OrderedReady" }}
  updateStrategy:
    type: {{ .Values.updateStrategy.type | default "RollingUpdate" }}
    {{- if eq .Values.updateStrategy.type "RollingUpdate" }}
    rollingUpdate:
      partition: {{ .Values.updateStrategy.rollingUpdate.partition | default 0 }}
    {{- end }}
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes: ["ReadWriteOnce"]
        storageClassName: {{ .Values.persistence.storageClassName | default "standard" }}
        resources:
          requests:
            storage: {{ .Values.persistence.size | default "1Gi" }}

---
# service.yml
apiVersion: v1
kind: Service
metadata:
  name: {{ include "app-chart.fullname" . }}
  labels:
    {{- include "app-chart.labels" . | nindent 4 }}
spec:
  clusterIP: None # Headless service for StatefulSet
  ports:
    - port: {{ .Values.service.port }}
      targetPort: http
      protocol: TCP
      name: http
  selector:
    {{- include "app-chart.selectorLabels" . | nindent 4 }}

---
# values.yaml
replicaCount: 3

podManagementPolicy: Parallel # Change to "OrderedReady" if sequential pod management is needed

updateStrategy:
  type: RollingUpdate
  rollingUpdate:
    partition: 0 # Set to > 0 for canary deployments

persistence:
  enabled: true
  storageClassName: standard
  size: 1Gi

image:
  repository: your-dockerhub-username/python-moscow-time
  tag: latest
  pullPolicy: Always

service:
  type: ClusterIP
  port: 3000

resources:
  limits:
    cpu: 200m
    memory: 256Mi
  requests:
    cpu: 100m
    memory: 128Mi