networks:
  loki:


services:
  app_python:
    image: fallenchromium/moscow-timezone-app
    ports:
      - "8000:8000"
    logging:
      options:
        max-size: 10m
        tag: "{{.ImageName}}/{{.Name}}/{{.ID}}"
        labels: "com.docker.compose.project,com.docker.compose.service"
    deploy:
      resources:
        limits:
          memory: 256M
    networks:
      - loki
    healthcheck:
      test: ["CMD", "bash", "-c", "echo > /dev/tcp/localhost/8000"]
      interval: 30s
      timeout: 10s
      retries: 3


  app_typescript:
    image: fallenchromium/propositional-logic-app
    ports:
      - "8001:80"
    logging:
      options:
        max-size: 10m
        tag: "{{.ImageName}}/{{.Name}}/{{.ID}}"
        labels: "com.docker.compose.project,com.docker.compose.service"
    deploy:
      resources:
        limits:
          memory: 256M
    networks:
      - loki
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:80"]
      interval: 30s
      timeout: 10s
      retries: 3

  loki:
    image: grafana/loki:latest
    ports:
      - "3100:3100"
    logging:
      options:
        max-size: 10m
        tag: "{{.ImageName}}/{{.Name}}/{{.ID}}"
        labels: "com.docker.compose.project,com.docker.compose.service"
    command: -config.file=/etc/loki/local-config.yaml
    networks:
      - loki
    deploy:
      resources:
        limits:
          memory: 512M
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:3100/ready || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    logging:
      options:
        max-size: 10m
        tag: "{{.ImageName}}/{{.Name}}/{{.ID}}"
        labels: "com.docker.compose.project,com.docker.compose.service"
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    networks:
      - loki
    deploy:
      resources:
        limits:
          memory: 512M
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:9090/-/healthy"]
      interval: 30s
      timeout: 10s
      retries: 3

  promtail:
    image: grafana/promtail:latest
    volumes:
      - /var/log:/var/log:ro
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - ./promtail-config.yaml:/etc/promtail/config.yml
    command: -config.file=/etc/promtail/config.yml
    logging:
      options:
        max-size: 10m
        tag: "{{.ImageName}}/{{.Name}}/{{.ID}}"
        labels: "com.docker.compose.project,com.docker.compose.service"
    networks:
      - loki
    deploy:
      resources:
        limits:
          memory: 256M
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:9080/ready || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

  grafana:
    environment:
      - GF_PATHS_PROVISIONING=/etc/grafana/provisioning
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_FEATURE_TOGGLES_ENABLE=alertingSimplifiedRouting,alertingQueryAndExpressionsStepMode
    logging:
      options:
        max-size: 10m
        tag: "{{.ImageName}}/{{.Name}}/{{.ID}}"
        labels: "com.docker.compose.project,com.docker.compose.service"
    entrypoint:
      - sh
      - -euc
      - |
        mkdir -p /etc/grafana/provisioning/datasources
        cat <<EOF > /etc/grafana/provisioning/datasources/ds.yaml
        apiVersion: 1
        datasources:
        - name: Loki
          type: loki
          access: proxy 
          orgId: 1
          url: http://loki:3100
          basicAuth: false
          isDefault: true
          version: 1
          editable: false
        - name: Prometheus
          type: prometheus
          access: proxy
          orgId: 1
          url: http://prometheus:9090
          basicAuth: false
          isDefault: false
          version: 1
          editable: false
        EOF
        /run.sh
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    networks:
      - loki
    deploy:
      resources:
        limits:
          memory: 512M
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:3000/api/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

  cadvisor:
      image: gcr.io/cadvisor/cadvisor:v0.47.0
      container_name: cadvisor
      restart: unless-stopped
      privileged: true
      ports:
        - "8080:8080"
      volumes:
        - /:/rootfs:ro
        - /var/run:/var/run:ro
        - /sys:/sys:ro
        - /var/lib/docker/:/var/lib/docker:ro
        - /dev/disk/:/dev/disk:ro
      networks:
        - loki
      deploy:
        resources:
          limits:
            memory: 256M
      healthcheck:
        test: ["CMD", "wget", "--spider", "-q", "http://localhost:8080/healthz"]
        interval: 30s
        timeout: 10s
        retries: 3