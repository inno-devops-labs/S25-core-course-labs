networks:
  monitoring:
    driver: bridge

volumes:
  loki-data:

services:
  app-python:
    image: azamatbayramov/s25-devops-py:latest
    restart: unless-stopped
    ports:
      - "8001:8001"
    networks:
      - monitoring
    logging:
      driver: "json-file"
      options:
        max-size: "20m"
        max-file: "5"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/api/time"]
      start_period: 1s
      retries: 3
      timeout: 5s

  app-go:
    image: azamatbayramov/s25-devops-go:latest
    restart: unless-stopped
    ports:
      - "8002:8002"
    networks:
      - monitoring
    logging:
      driver: "json-file"
      options:
        max-size: "20m"
        max-file: "5"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8002/api/date"]
      start_period: 1s
      retries: 3
      timeout: 5s

  loki:
    image: grafana/loki:latest
    command: -config.file=/etc/loki/local-config.yaml
    volumes:
      - loki-data:/loki
    restart: unless-stopped
    ports:
      - "3100:3100"
    networks:
      - monitoring
    logging:
      driver: "json-file"
      options:
        max-size: "20m"
        max-file: "5"
    healthcheck:
      test: ["CMD", "pgrep", "loki"]
      start_period: 1s
      retries: 3
      timeout: 5s

  grafana:
    image: grafana/grafana:latest
    environment:
      GF_PATHS_PROVISIONING: "/etc/grafana/provisioning"
      GF_AUTH_ANONYMOUS_ENABLED: "true"
      GF_AUTH_ANONYMOUS_ORG_ROLE: "Admin"
      GF_FEATURE_TOGGLES_ENABLE: "alertingQueryAndExpressionsStepMode,alertingSimplifiedRouting"
    volumes:
      - ./grafana-provisioning/datasources:/etc/grafana/provisioning/datasources:ro
    restart: unless-stopped
    depends_on:
      loki:
        condition: service_healthy
      prometheus:
        condition: service_healthy
    ports:
      - "3000:3000"
    networks:
      - monitoring
    logging:
      driver: "json-file"
      options:
        max-size: "20m"
        max-file: "5"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      start_period: 1s
      retries: 3
      timeout: 5s

  promtail:
    image: grafana/promtail:latest
    command: -config.file=/etc/promtail/cfg.yml
    volumes:
      - /var/log:/var/log
      - ./promtail.yml:/etc/promtail/cfg.yml
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
    restart: unless-stopped
    depends_on:
      loki:
        condition: service_healthy
    networks:
      - monitoring
    logging:
      driver: "json-file"
      options:
        max-size: "20m"
        max-file: "5"
    healthcheck:
      test: ["CMD", "pgrep", "promtail"]
      start_period: 1s
      retries: 3
      timeout: 5s

  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    restart: unless-stopped
    depends_on:
      loki:
        condition: service_healthy
      app-python:
        condition: service_healthy
    ports:
      - "9090:9090"
    networks:
      - monitoring
    logging:
      driver: "json-file"
      options:
        max-size: "20m"
        max-file: "5"
    healthcheck:
      test: ["CMD", "pgrep", "prometheus"]
      start_period: 1s
      retries: 3
      timeout: 5s
