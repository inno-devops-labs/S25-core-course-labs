networks:
  loki:

volumes:
  loki-data:

services:
  loki:
    image: grafana/loki:latest
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/local-config.yaml
    volumes:
      - loki-data:/loki
    networks:
      - loki
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    deploy:
      resources:
        limits:
          memory: "512m"
    healthcheck:
      test: ["CMD", "pgrep", "loki"]
      start_period: 5s
      retries: 5
      timeout: 5s

  promtail:
    image: grafana/promtail:latest
    volumes:
      - /var/log:/var/log
      - ./promtail.yml:/etc/promtail/config.yml
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
    command: -config.file=/etc/promtail/config.yml
    depends_on:
      loki:
        condition: service_healthy
    networks:
      - loki
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    deploy:
      resources:
        limits:
          memory: "512m"
    healthcheck:
      test: ["CMD", "pgrep", "promtail"]
      start_period: 5s
      retries: 5
      timeout: 5s

  grafana:
    environment:
      - GF_PATHS_PROVISIONING=/etc/grafana/provisioning
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_FEATURE_TOGGLES_ENABLE=alertingSimplifiedRouting,alertingQueryAndExpressionsStepMode
    entrypoint:
      - sh
      - -euc
      - |
        mkdir -p /etc/grafana/provisioning/datasources
        cat <<EOF > /etc/grafana/provisioning/datasources/ds.yaml
        apiVersion: 1
        datasources:
        - name: Loki
          type: loki
          access: proxy 
          orgId: 1
          url: http://loki:3100
          basicAuth: false
          isDefault: true
          version: 1
          editable: false
        EOF
        /run.sh
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    depends_on:
      loki:
        condition: service_healthy
      prometheus:
        condition: service_healthy
    networks:
      - loki
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    deploy:
      resources:
        limits:
          memory: "512m"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 10s
      timeout: 5s
      retries: 5

  app_python:
    image: magicwinnie/simple-python-web-app:latest
    ports:
      - "8888:8000"
    networks:
      - loki
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    deploy:
      resources:
        limits:
          memory: "512m"
    healthcheck:
      test: ["CMD", "pgrep", "python"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - ./visits:/app/visits

  app_go:
    image: magicwinnie/simple-go-web-app:latest
    ports:
      - "8889:8080"
    networks:
      - loki
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    deploy:
      resources:
        limits:
          memory: "512m"
    healthcheck:
      disable: true
    volumes:
      - ./visits_go:/app/visits

  prometheus:
    image: prom/prometheus:latest
    volumes:
      - "./prometheus.yml:/etc/prometheus/prometheus.yml"
    ports:
      - "9090:9090"
    depends_on:
      loki:
        condition: service_healthy
      app_python:
        condition: service_healthy
    networks:
      - loki
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    deploy:
      resources:
        limits:
          memory: "512m"
    healthcheck:
      test: ["CMD", "pgrep", "prometheus"]
      interval: 10s
      timeout: 5s
      retries: 5
