version: "3.3"

networks:
  loki:

services:
  loki:
    image: grafana/loki:latest
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/local-config.yaml
    networks:
      - loki
    mem_limit: 512m
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3100/ready"]
      interval: 10s
      timeout: 5s
      retries: 3
    logging:
      driver: "json-file"
      options:
        max-size: "10m"  
        max-file: "3"

  promtail:
    image: grafana/promtail:latest
    volumes:
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
    ports:
      - "9080:9080"
    command: |
      -config.file=/etc/promtail/config.yml
    entrypoint:
      - sh
      - -c
      - |
        cat <<EOF > /etc/promtail/config.yml
        server:
          http_listen_port: 9080
          
        client:
          url: http://loki:3100/api/prom/push

        scrape_configs:
          - job_name: containers
            static_configs:
              - targets:
                  - localhost
                labels:
                  job: docker
                  __path__: /var/lib/docker/containers/*/*log
        EOF
        /usr/bin/promtail -config.file=/etc/promtail/config.yml
    networks:
      - loki
    mem_limit: 512m
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9080/ready"]
      interval: 10s
      timeout: 5s
      retries: 3
    logging:
      driver: "json-file"
      options:
        max-size: "10m"  
        max-file: "3"

  grafana:
    environment:
      - GF_PATHS_PROVISIONING=/etc/grafana/provisioning
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_FEATURE_TOGGLES_ENABLE=alertingSimplifiedRouting,alertingQueryAndExpressionsStepMode
    entrypoint:
      - sh
      - -euc
      - |
        mkdir -p /etc/grafana/provisioning/datasources
        cat <<EOF > /etc/grafana/provisioning/datasources/ds.yaml
        apiVersion: 1
        datasources:
        - name: Loki
          type: loki
          access: proxy 
          orgId: 1
          url: http://loki:3100
          basicAuth: false
          isDefault: true
          version: 1
          editable: false
        EOF
        /run.sh
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    networks:
      - loki
    mem_limit: 512m
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 10s
      timeout: 5s
      retries: 3
    logging:
      driver: "json-file"
      options:
        max-size: "10m"  
        max-file: "3" 

  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    entrypoint:
      - sh
      - -c
      - |
        cat <<EOF > /etc/prometheus/prometheus.yml
        global:
          scrape_interval: 15s

        scrape_configs:
          - job_name: 'loki'
            static_configs:
              - targets: ['loki:3100']

          - job_name: 'prometheus'
            static_configs:
              - targets: ['localhost:9090']

          - job_name: 'grafana'
            static_configs:
              - targets: ['grafana:3000']

          - job_name: 'promtail'
            static_configs:
              - targets: ['promtail:9080']

          - job_name: 'python_app'
            static_configs:
              - targets: ['python_app:5000']
        EOF
        /bin/prometheus --config.file=/etc/prometheus/prometheus.yml
    networks:
      - loki
    mem_limit: 512m
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9090/-/healthy"]
      interval: 10s
      timeout: 5s
      retries: 3
    logging:
      driver: "json-file"
      options:
        max-size: "10m"  
        max-file: "3"

  python_app:
    image: voronm1522/devops:python-app
    ports:
      - "5000:5000"
    networks:
      - loki
    mem_limit: 512m
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000"]
      interval: 10s
      timeout: 5s
      retries: 3
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
