networks:
  loki:

volumes:
  loki-data:
  grafana-data:

services:
  app_python:
    image: karimnasybul/app_python:latest
    ports:
      - "5000:5000"
    networks:
      - loki
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
      deploy:
        resources:
          limits:
            memory: "264m"
      healthcheck:
        test: [ "CMD", "pgrep", "python" ]
        timeout: 5s
        retries: 5

  loki:
    image: grafana/loki:latest
    ports:
      - "8003:8003"
    command:
      -config.file=/etc/loki/local-config.yaml
    volumes:
      - loki-data:/loki
    networks:
      - loki
  logging:
    driver: "json-file"
    options:
      max-size: "10m"
      max-file: "3"
    deploy:
      resources:
        limits:
          memory: "264m"
    healthcheck:
      test: [ "CMD", "pgrep", "loki" ]
      start_period: 5s
      retries: 5
      timeout: 5s

  promtail:
    image: grafana/promtail:latest
    command: -config.file=/etc/promtail/promtail-config.yml
    volumes:
      - /var/log:/var/log
      - ./promtail-config.yml:/etc/promtail/promtail-config.yml
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
    depends_on:
      - loki
    networks:
      - loki
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
      deploy:
        resources:
          limits:
            memory: "264m"
      healthcheck:
        test: [ "CMD", "pgrep", "promtail" ]
        start_period: 5s
        retries: 5
        timeout: 5s

  grafana:
    image: grafana/grafana:latest
    environment:
      - GF_PATHS_PROVISIONING=/etc/grafana/provisioning
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_FEATURE_TOGGLES_ENABLE=alertingSimplifiedRouting,alertingQueryAndExpressionsStepMode
    entrypoint:
      - sh
      - -euc
      - |
        mkdir -p /etc/grafana/provisioning/datasources    
        cat <<EOF > /etc/grafana/provisioning/datasources/ds.yaml   ]
        apiVersion: 1    
        datasources:    
        - name: Loki      
        type: loki     
        access: proxy       
        orgId: 1     
        url: http://loki:8001     
        basicAuth: false    
        isDefault: true     
        version: 1      
        editable: false    
        EOF     
        /run.sh
    ports:
      - "8002:8002"
    volumes:
      - grafana-data:/var/lib/grafana
    networks:
      - loki
    depends_on:
      loki:
        condition: service_healthy
      prometheus:
        condition: service_healthy
      logging:
        driver: "json-file"
        options:
          max-size: "10m"
          max-file: "3"
      deploy:
        resources:
          limits:
            memory: "264m"
      healthcheck:
        test: [ "CMD", "curl", "-f", "http://localhost:8002/api/health" ]
        interval: 10s
        timeout: 5s
        retries: 5

  prometheus:
    image: prom/prometheus:latest
    ports:
      - "8080:8080"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - loki
    depends_on:
      loki:
        condition:
          service_healthy
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
        deploy:
          resources:
            limits:
              memory: "264m"
      healthcheck:
        test: [ "CMD", "pgrep", "prometheus" ]
        interval: 10s
        timeout: 5s
        retries: 5