version: "3.3"

x-logging:
  &default-logging
  driver: "json-file"
  options:
    max-size: "200k"
    max-file: "10"

x-deploy:
  &default-deploy
  resources:
    limits:
      memory: 512M

networks:
  loki:

services:
  loki:
    container_name: loki
    image: grafana/loki:latest
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/local-config.yaml
    networks:
      - loki
    logging: *default-logging
    deploy: *default-deploy
    healthcheck:
      test: ["CMD-SHELL", "curl --fail http://localhost:3100/ready || exit 1"]
      interval: 15s
      timeout: 5s
      retries: 3

  promtail:
    container_name: promtail
    image: grafana/promtail:latest
    volumes:
      - ./promtail.yml:/etc/promtail/config.yml
      - /var/run/docker.sock:/var/run/docker.sock
    command: -config.file=/etc/promtail/config.yml
    networks:
      - loki
    logging: *default-logging
    deploy: *default-deploy
    healthcheck:
      test: ["CMD-SHELL", "curl --fail http://localhost:1080/health || exit 1"]
      interval: 15s
      timeout: 5s
      retries: 3

  grafana:
    container_name: grafana
    environment:
      - GF_PATHS_PROVISIONING=/etc/grafana/provisioning
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_FEATURE_TOGGLES_ENABLE=alertingSimplifiedRouting,alertingQueryAndExpressionsStepMode
    entrypoint:
      - sh
      - -euc
      - |
        mkdir -p /etc/grafana/provisioning/datasources
        cat <<EOF > /etc/grafana/provisioning/datasources/ds.yaml
        apiVersion: 1
        datasources:
        - name: Loki
          type: loki
          access: proxy 
          orgId: 1
          url: http://loki:3100
          basicAuth: false
          isDefault: true
          version: 1
          editable: false
        EOF
        /run.sh
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    networks:
      - loki
    logging: *default-logging
    deploy: *default-deploy
    healthcheck:
      test: ["CMD-SHELL", "curl --fail http://localhost:3000 || exit 1"]
      interval: 15s
      timeout: 5s
      retries: 3

  time-app-py:
    container_name: time-app-py
    restart: always
    image: unileonid/time-app-py:latest
    ports:
      - "8080:8080"
    networks:
      - loki
    logging: *default-logging
    deploy: *default-deploy
    healthcheck:
      test: ["CMD-SHELL", "curl --fail http://localhost:8080 || exit 1"]
      interval: 15s
      timeout: 5s
      retries: 3

  prometheus:
    container_name: prometheus
    image: prom/prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - loki
    logging: *default-logging
    deploy: *default-deploy
    healthcheck:
      test: ["CMD-SHELL", "curl --fail http://localhost:9090 || exit 1"]
      interval: 15s
      timeout: 5s
      retries: 3
