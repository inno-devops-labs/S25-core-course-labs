networks:
  monitoring:

services:


  app_python:
    image: "hayderuni/moscow-time-flask"
    ports:
      - "5000:5000"
      - "8000:8000"
    logging:
      driver: "json-file"
      options: # https://docs.docker.com/engine/logging/configure/
        max-size: 10m
        max-file: 3
        tag: "{{.ImageName}}|{{.Name}}"
    deploy:
      resources:
        limits: # https://docs.docker.com/reference/compose-file/deploy/#resources
          memory: 150m
    healthcheck: # https://docs.docker.com/reference/compose-file/services/#healthcheck
      test: wget --spider -S 'http://localhost:5000' 2>&1 | grep 'HTTP/' | awk '{print $2}'
      interval: 10s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - monitoring

  loki:
    image: grafana/loki:latest
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/local-config.yaml
    logging:
      driver: "json-file"
      options:
        max-size: 10m
        max-file: 3
        tag: "{{.ImageName}}|{{.Name}}"
    deploy:
      resources:
        limits:
          memory: 150m
    healthcheck:
      test: wget --spider -q http://localhost:3100/ready
      interval: 10s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - monitoring


  promtail:
    image: grafana/promtail:latest
    volumes:
      - /var/log:/var/log
      - ./promtail.yml:/etc/promtail/config.yml
      - /var/lib/docker/containers:/var/lib/docker/containers
    command: -config.file=/etc/promtail/config.yml
    logging:
      driver: "json-file"
      options:
        max-size: 10m
        max-file: 3
        tag: "{{.ImageName}}|{{.Name}}"
    deploy:
      resources:
        limits:
          memory: 150m
    healthcheck:
      test: pgrep -f promtail
      interval: 10s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - monitoring

  grafana:
    environment:
      # Allow anonymous access as admin
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
    image: grafana/grafana:latest
    volumes: # Adding the volume to configure grafana to add Loki as a datasource
      - ./grafana.yml:/etc/grafana/provisioning/datasources/ds.yaml
    ports:
      - "3000:3000"
    logging:
      driver: "json-file"
      options:
        max-size: 10m
        max-file: 3
        tag: "{{.ImageName}}|{{.Name}}"
    deploy:
      resources:
        limits:
          memory: 150m
    healthcheck:
      test: curl -f http://localhost:3000
      interval: 10s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - monitoring

  prometheus:
    image: prom/prometheus:latest
    restart: unless-stopped
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    command: '--config.file=/etc/prometheus/prometheus.yml'
    ports:
      - "9090:9090"
    logging:
      driver: "json-file"
      options:
        max-size: 10m
        max-file: 3
        tag: "{{.ImageName}}|{{.Name}}"
    deploy:
      resources:
        limits:
          memory: 150m
    healthcheck:
      test: wget -O - http://localhost:9090
      interval: 10s
      timeout: 15s
      retries: 10
      start_period: 40s
    networks:
      - monitoring