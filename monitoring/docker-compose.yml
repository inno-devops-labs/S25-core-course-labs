networks:
  monitoring:
x-logging:
  &default-logging
  driver: "json-file"
  options:
    max-size: "200k"
    max-file: "10"
x-deploy:
  &default-deploy
  resources:
    limits:
      memory: 256M
services:
  loki:
    container_name: loki
    image: grafana/loki:latest
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/local-config.yaml
    networks:
      - monitoring
    logging: *default-logging
    deploy: *default-deploy
    healthcheck:
      test: [ "CMD-SHELL", "wget --spider --quiet http://localhost:3100/ready || exit 1" ]
      interval: 10s
      timeout: 3s
      retries: 3
  promtail:
    container_name: promtail
    image: grafana/promtail:latest
    volumes:
      - ./promtail.yml:/etc/promtail/config.yml
      - /var/run/docker.sock:/var/run/docker.sock
    command: -config.file=/etc/promtail/config.yml
    networks:
      - monitoring
    logging: *default-logging
    deploy: *default-deploy
    healthcheck:
      test: [ "CMD-SHELL", "wget --spider --quiet http://localhost:1080/health || exit 1" ]
      interval: 10s
      timeout: 3s
      retries: 3
  grafana:
    container_name: grafana
    environment:
      - GF_PATHS_PROVISIONING=/etc/grafana/provisioning
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_FEATURE_TOGGLES_ENABLE=alertingSimplifiedRouting,alertingQueryAndExpressionsStepMode
    entrypoint:
      - sh
      - -euc
      - |
        mkdir -p /etc/grafana/provisioning/datasources
        cat <<EOF > /etc/grafana/provisioning/datasources/ds.yaml
        apiVersion: 1
        datasources:
        - name: Loki
          type: loki
          access: proxy
          orgId: 1
          url: http://loki:3100
          basicAuth: false
          isDefault: true
          version: 1
          editable: false
        EOF
        /run.sh
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    networks:
      - monitoring
    logging: *default-logging
    deploy: *default-deploy
    healthcheck:
      test: [ "CMD-SHELL", "wget --spider --quiet http://localhost:3000 || exit 1" ]
      interval: 10s
      timeout: 3s
      retries: 3
  app_python:
    image: dmhd6219/inno_devops_lab2_python_basic:latest
    ports:
      - "8000:8000"
    networks:
      - monitoring
    logging: *default-logging
    deploy: *default-deploy
    healthcheck:
      test: [ "CMD-SHELL", "wget --spider --quiet http://localhost:8000 || exit 1" ]
      interval: 10s
      timeout: 3s
      retries: 3
    volumes:
      - ./pyapp/data:/data
  app_typescript:
    image: dmhd6219/inno_devops_lab2_typescript_basic:latest
    ports:
      - "8080:8080"
    networks:
      - monitoring
    logging: *default-logging
    deploy: *default-deploy
    healthcheck:
      test: [ "CMD-SHELL", "wget --spider --quiet http://localhost:8080 || exit 1" ]
      interval: 10s
      timeout: 3s
      retries: 3
  prometheus:
    image: prom/prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - monitoring
    logging: *default-logging
    deploy: *default-deploy
    healthcheck:
      test: [ "CMD-SHELL", "wget --spider --quiet http://localhost:9090 || exit 1" ]
      interval: 10s
      timeout: 3s
      retries: 3