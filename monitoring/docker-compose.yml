version: '3.8'

volumes:
  prom_data:

networks:
  loki_net:

x-deploy: 
  &default-deploy
  resources:
    limits:
      memory: 250M

x-logging:
  &common_logging
  driver: "json-file"
  options:
    tag: "{{.ImageName}}|{{.ContainerName}}"
    max-size: "20M"
    max-file: "10"

services:
  loki:
    image: grafana/loki:latest
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/local-config.yaml
    networks:
      - loki_net
    healthcheck:
      test: ["CMD", "wget", "--spider", "http://localhost:3100/ready"]
      interval: 30s
      timeout: 10s
      retries: 3
    logging: *common_logging
    deploy: *default-deploy
  
  promtail:
    image: grafana/promtail:latest
    volumes:
      - /var/log:/var/log
      - /var/lib/docker/containers:/var/lib/docker/containers
      - ./promtail.yml:/etc/promtail/config.yml
    command: -config.file=/etc/promtail/config.yml
    networks:
      - loki_net
    logging: *common_logging
    deploy: *default-deploy
    healthcheck:
      test: ["CMD", "wget", "--spider", "http://localhost:9080/ready"]
      interval: 30s
      timeout: 10s
      retries: 3
  
  grafana:
    container_name: grafana
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_FEATURE_TOGGLES_ENABLE=alertingSimplifiedRouting,alertingQueryAndExpressionsStepMode
    entrypoint:
      - sh
      - -euc
      - |
        mkdir -p /etc/grafana/provisioning/datasources
        cat <<EOF > /etc/grafana/provisioning/datasources/ds.yaml
        apiVersion: 1
        datasources:
        - name: Loki
          type: loki
          access: proxy 
          orgId: 1
          url: http://loki:3100
          basicAuth: false
          isDefault: true
          version: 1
          editable: false
        EOF
        /run.sh
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    networks:
      - loki_net
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    logging: *common_logging
    deploy: *default-deploy

  python-web-app: 
    image: lekski/python-web-app:latest
    container_name: python-web-app
    ports:
      - "80:8000"
    networks:
      - loki_net 
    deploy: *default-deploy
    logging:
      driver: "json-file"
      options:
        tag: "{{.ImageName}}|{{.Name}}"
    volumes:
      - ./visits:/app/visits
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "wget --no-verbose --tries=1 --spider http://127.0.0.1:80/ || exit 1",
        ]
      interval: 10s
      timeout: 10s
      start_period: 10s
      retries: 5

  golang-web-app:
    image: lekski/golang-web-app:latest
    container_name: golang-web-app
    ports:
      - "81:8000"
    networks:
      - loki_net
    deploy: *default-deploy
    logging:
      driver: "json-file"
      options:
        tag: "{{.ImageName}}|{{.Name}}"
    volumes:
      - ./visits:/app/visits.txt
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "wget --no-verbose --tries=1 --spider http://127.0.0.1:81/ || exit 1",
        ]
      interval: 10s
      timeout: 10s
      start_period: 10s
      retries: 5

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    ports:
      - 9090:9090
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prom_data:/prometheus
    networks:
      - loki_net
    logging: *common_logging
    deploy: *default-deploy
